# This is a configuration definition file in folder "/media/Data/Dropbox/LTLMoP-ubuntu/src/examples/FStwo_robot_negotiation/delivery/alice/configs".
# Format details are described at the beginning of each section below.


======== General Config ========

Actuator_Proposition_Mapping: # Mapping between actuator propositions and actuator handler functions
pickup = share.DummyActuatorHandler.setActuator(name='pickup')
deliver = share.DummyActuatorHandler.setActuator(name='deliver')

Initial_Truths: # Initially true propositions

Main_Robot: # The name of the robot used for moving in this config
alice

Name: # Configuration name
basicSim

Region_Tags: # Mapping from tag names to region groups, for quantification
{}

Sensor_Proposition_Mapping: # Mapping between sensor propositions and sensor handler functions
hallwayBottom_rc = share.DummySensorHandler.inRegion(radius=5.0, regionName=u'hallwayBottom')
bob_reception = share.DummySensorHandler.otherRobotLocation(robot_name=u'bob', region=u'reception')
bob_storageBottom = share.DummySensorHandler.otherRobotLocation(robot_name=u'bob', region=u'storageBottom')
bob_atrium = share.DummySensorHandler.otherRobotLocation(robot_name=u'bob', region=u'atrium')
reception_rc = share.DummySensorHandler.inRegion(radius=5.0, regionName=u'reception')
bob_hallwayBottom = share.DummySensorHandler.otherRobotLocation(robot_name=u'bob', region=u'hallwayBottom')
itemRequest = share.DummySensorHandler.buttonPress(button_name='itemRequest', init_value=False)
atrium_rc = share.DummySensorHandler.inRegion(radius=5.0, regionName=u'atrium')
emergencyExit_rc = share.DummySensorHandler.inRegion(radius=5.0, regionName=u'emergencyExit')
office_rc = share.DummySensorHandler.inRegion(radius=5.0, regionName=u'office')
bob_emergencyExit = share.DummySensorHandler.otherRobotLocation(robot_name=u'bob', region=u'emergencyExit')
trashInHallwayBottom = share.DummySensorHandler.otherRobotSensorStatus(robot_name=u'bob', sensor_name=u'trashInHallwayBottom')
hallwayCentral_rc = share.DummySensorHandler.inRegion(radius=5.0, regionName=u'hallwayCentral')
itemReceived = share.DummySensorHandler.buttonPress(button_name='itemReceived', init_value=False)
bob_library = share.DummySensorHandler.otherRobotLocation(robot_name=u'bob', region=u'library')
cafe_rc = share.DummySensorHandler.inRegion(radius=5.0, regionName=u'cafe')
pickup_ac = share.DummySensorHandler.buttonPress(button_name='pickup_ac', init_value=False)
bob_office = share.DummySensorHandler.otherRobotLocation(robot_name=u'bob', region=u'office')
bob_hallwayCentral = share.DummySensorHandler.otherRobotLocation(robot_name=u'bob', region=u'hallwayCentral')
bob_hallwayTop = share.DummySensorHandler.otherRobotLocation(robot_name=u'bob', region=u'hallwayTop')
storageBottom_rc = share.DummySensorHandler.inRegion(radius=5.0, regionName=u'storageBottom')
storageTop_rc = share.DummySensorHandler.inRegion(radius=5.0, regionName=u'storageTop')
trashInHallwayTop = share.DummySensorHandler.otherRobotSensorStatus(robot_name=u'bob', sensor_name=u'trashInHallwayTop')
hallwayTop_rc = share.DummySensorHandler.inRegion(radius=5.0, regionName=u'hallwayTop')
library_rc = share.DummySensorHandler.inRegion(radius=5.0, regionName=u'library')
trashInHallwayCentral = share.DummySensorHandler.otherRobotSensorStatus(robot_name=u'bob', sensor_name=u'trashInHallwayCentral')
deliver_ac = share.DummySensorHandler.buttonPress(button_name='deliver_ac', init_value=False)
bob_storageTop = share.DummySensorHandler.otherRobotLocation(robot_name=u'bob', region=u'storageTop')
bob_cafe = share.DummySensorHandler.otherRobotLocation(robot_name=u'bob', region=u'cafe')


======== Robot1 Config ========

CalibrationMatrix: # 3x3 matrix for converting coordinates, stored as lab->map
array([[1, 0, 0],
       [0, 1, 0],
       [0, 0, 1]])

DriveHandler: # Input value for robot drive handler, refer to file inside the handlers/drive folder
share.Drive.HolonomicDriveHandler(multiplier=50.0,maxspeed=999.0)

InitHandler: # Input value for robot init handler, refer to the init file inside the handlers/robots/Type folder
basicSim.BasicSimInitHandler(init_region="library")

LocomotionCommandHandler: # Input value for robot locomotion command handler, refer to file inside the handlers/robots/Type folder
basicSim.BasicSimLocomotionCommandHandler(speed=1.0)

MotionControlHandler: # Input value for robot motion control handler, refer to file inside the handlers/motionControl folder
share.MotionControl.RRTControllerHandler(robot_type=1,max_angle_goal=6.28,max_angle_overlap=1.57,plotting=False)

PoseHandler: # Input value for robot pose handler, refer to file inside the handlers/pose folder
basicSim.BasicSimPoseHandler()

RobotName: # Robot Name
alice

Type: # Robot type
basicSim

